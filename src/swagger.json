{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Swagger test Application API for Node.js course",
    "description": "Swagger test Application API for Node.js course",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3000",
  "basePath": "/api",
  "tags": [
    {
      "name": "Users",
      "description": "API for users in the system"
    },
    {
      "name": "Tokens",
      "description": "API for tokens in the system"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Add user",
        "description": "Create new user",
        "operationId": "addUserWithForm",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "type": "string",
            "required": true,
            "description": "User name",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "name": "permission",
            "in": "formData",
            "type": "string",
            "description": "Permission: 'user' or 'admin'. Default value 'user'",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User is created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "put": {
        "summary": "Update user",
        "tags": [
          "Users"
        ],
        "operationId": "updateUserWithForm",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "formData",
            "type": "string",
            "description": "User ID",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "name": "name",
            "in": "formData",
            "type": "string",
            "description": "User name",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "name": "permission",
            "in": "formData",
            "type": "string",
            "description": "Permission: 'user' or 'admin'. Default value 'user'",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User is updated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/users/{id}": {
      "delete": {
        "summary": "Delete user",
        "tags": [
          "Users"
        ],
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "User ID to delete",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User is deleted",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/tokens/{user_id}": {
      "get": {
        "tags": [
          "Tokens"
        ],
        "summary": "Tokens for user by user_id",
        "operationId": "getUserTokens",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "User ID",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Token"
            }
          }
        }
      }
    },
    "/tokens": {
      "get": {
        "tags": [
          "Tokens"
        ],
        "summary": "All Tokens for all users",
        "operationId": "getAllTokens",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Token"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tokens"
        ],
        "description": "Add Token",
        "operationId": "addToken",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "formData",
            "type": "string",
            "description": "User ID",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Token"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Token added",
            "schema": {
              "$ref": "#/definitions/Token"
            }
          }
        }
      },
      
      "put": {
        "summary": "Update Token",
        "tags": [
          "Tokens"
        ],
        "operationId": "updateToken",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "formData",
            "type": "string",
            "description": "Token ID",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token updated",
            "schema": {
              "$ref": "#/definitions/Token"
            }
          }
        }
      }
    },
    "/tokens/{id}": {
      "delete": {
        "summary": "Delete token",
        "tags": [
          "Tokens"
        ],
        "operationId": "deleteToken",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Token ID to delete",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Token is deleted",
            "schema": {
              "$ref": "#/definitions/Token"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "permission": {
          "type": "string"
        }
      }
    },
    "Token": {
      "required": [
        "user_id",
        "_id"
      ],
      "properties": {
        "_id": {
          "type": "string",
          "uniqueItems": true
        },
        "user_id": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Users": {
      "type": "array",
      "$ref": "#/definitions/User"
    },
    "Tokens": {
      "type": "array",
      "$ref": "#/definitions/Token"
    }
  }
}